" import_full_doc_typo3.vim
"
" Author: Sylvain Viart  <sylvain (at) ledragon.net>
" Date: August 2004
" Vim Version: 6.2
" Last Modified: Monday, August 30 2004 - 07:58:40 CEST
"
" Convert a full HTML document from typo3.org to MediaWiki text format,
" starting at the TOC generated by the Office Displayer extension.
"
" How to use:
" - create a new folder, and cd to it
" - start vim
" - Open the remote TOC document with vim, for example:
"   :Nread http://typo3.org/documentation/document-library/doc_tut_backend/
" !!  You will need a working Network support for vim (needs wget). !!
" - alternatively you can copy the HTML source manualy into Vim
" - source the script, (:so import_full_doc_typo3.vim)
"   this script needs typo3_2_wiki.vim too
" - this will generate a new file named import_URL in the current vim folder
" - run that file with the command line interpreter
"   Linux:   sh import_URL
"   Windows: ren import_URL *.bat
"            import_URL
"   Vim:     :!sh %
" - go back in import_URL vim buffer and hit the key: Q
"   If you have closed vim, no problem, just reopen import_URL and execute
"   this 2 vim command:
"     :let skip_fetch = 1
"     :so import_full_doc_typo3.vim
" - stand by, and see the magic to achieve itself ;-)
" - Copy and paste the result where ever you want in the wiki :-)

" ==================================== Actions 
" compute script path
let script_path=expand('<sfile>:p:h')
let t2w=script_path.'/typo3_2_wiki.vim'

" disable more prompt
set nomore

" =================================== Q mapping definition
nmap Q :call Process_List()<CR>

" some mapping to reduce coding used to switch window
nmap WK <c-w>k
nmap WJ <c-w>k
nmap WP <c-w>p

nmap TT :call Transform_Document()<cr>

func! Process_List()
	" tranform import_URL into a new list of file name to process
	%s@.*/\([^/]\+\)/$@\1@
	1
	" using a new window we are going to recreate the full document, part by
	" part.
	new document
	norm WP
	" loop over each filename
	let n = line('$')
	let i = 1
	while i <= n
		norm TT
		let i = i + 1
	endw

endf

func! Transform_Document()
	" read the file name under the cursor in register @f
	exe "norm 0\"fy$"
	" create a new buffer, read the file and apply t2w set of actions
	new
	exe "0r ".@f
	exe "so ".g:t2w
	" copy the result
	norm 1GyG
	" close the buffer
	q!
	" go to document buffer
	norm WK
	" paste the content att current cursror position, and go at the new end
	norm pG
	" go back to file list buffer
	norm WP
	" move to the next file name
	norm j
endf

if exists('skip_fetch')
	finish
endif

" =========================== transform into a list of URL
" run t2w on the TOC to transform it into a list of wiki URL
exe 'so '.t2w
" remove HTML talbe markup
%s@</\=\(table\|tr\|td\)[^>]*>@@ge
" remove anything but wikilink
v/^\[[^\]]\+]$/ d
" finalize to have only URL
%s@\[\([^ ]\+\).*@\1@
" ============================== remove duplicate page URL
" remove ancor at end of URL
%s@#[^/]\+$@@e 
" compare all line
let l = 1
while l <= line('$')
	" copy current line in register @l
	exe "norm ".l."G0\"ly$"
	" add - at the start of the line to prevent matching of itself
	s@^@-@
	let @l = escape(@l, '.[]$')
	" delete all same line
	silent exe "g@^".@l."$@ d"
	
	let l = l + 1
endw
" remove minus sign
%s@^-@@

" convert the list into a wget list of command
%s@.*/\([^/]\+\)/$@wget -O \1 &@

" write the result, !! overwrite existing file if any
w! import_URL
" open it
e! import_URL
